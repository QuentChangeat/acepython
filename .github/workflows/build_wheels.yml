
name: Build Manual

on:
  workflow_dispatch:

jobs:
  build_wheels:
    name: Build wheel for cp${{ matrix.python }}-${{ matrix.platform }}
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        include:

          # 64-bit Linux
          - os: ubuntu-latest
            python: 39
            platform: manylinux_x86_64
          - os: ubuntu-latest
            python: 310
            platform: manylinux_x86_64
          - os: ubuntu-latest
            python: 311
            platform: manylinux_x86_64
          - os: ubuntu-latest
            python: 312
            platform: manylinux_x86_64

          # 64-bit macOS
          - os: macos-latest
            python: 39
            arch: x86_64
            platform: macosx_x86_64
          - os: macos-latest
            python: 310
            arch: x86_64
            platform: macosx_x86_64
          - os: macos-latest
            python: 311
            arch: x86_64
            platform: macosx_x86_64
          - os: macos-latest
            python: 312
            arch: x86_64
            platform: macosx_x86_64

          - os: macos-latest
            python: 39
            arch: arm64
            platform: macosx_arm64
          - os: macos-latest
            python: 310
            arch: arm64
            platform: macosx_arm64
          - os: macos-latest
            python: 311
            arch: arm64
            platform: macosx_arm64
          - os: macos-latest
            python: 312
            arch: arm64
            platform: macosx_arm64

          # 64-bit Windows
          - os: windows-2019
            python: 39
            platform: win_amd64
          - os: windows-2019
            python: 310
            platform: win_amd64
          - os: windows-2019
            python: 311
            platform: win_amd64
          - os: windows-2019
            python: 312
            platform: win_amd64
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install mingw-w64 on Windows
        if: ${{ runner.os == 'Windows' }}
        uses: msys2/setup-msys2@v2
        with:
          path-type: inherit
          install: |
            mingw-w64-x86_64-gcc-fortran

      - name: Setup gfortran (MacOS)
        if: contains(matrix.os, 'macos')
        run: |
          # https://github.com/actions/virtual-environments/issues/2524
          # https://github.com/cbg-ethz/dce/blob/master/.github/workflows/pkgdown.yaml
          sudo ln -s /usr/local/bin/gfortran-11 /usr/local/bin/gfortran
          sudo mkdir /usr/local/gfortran
          sudo ln -s /usr/local/Cellar/gcc@11/*/lib/gcc/11 /usr/local/gfortran/lib
          gfortran --version

      - name: Build and test wheels (MacOS)
        uses: pypa/cibuildwheel@v2.15.0
        if: contains(matrix.os, 'macos')
        env:
          CIBW_ARCHS_MACOS: ${{matrix.arch}}
          CIBW_BUILD: cp${{ matrix.python }}-${{ matrix.platform }}


      - name: Build and test wheels
        uses: pypa/cibuildwheel@v2.15.0
        if: ${{!contains(matrix.os, 'macos')}}
        env:
          CIBW_BUILD: cp${{ matrix.python }}-${{ matrix.platform }}
          CIBW_BEFORE_BUILD_WINDOWS: pip install delvewheel
          CIBW_REPAIR_WHEEL_COMMAND_WINDOWS: "delvewheel show {wheel} && delvewheel repair -w {dest_dir} {wheel} --no-mangle-all"
      - name: Store artifacts
        uses: actions/upload-artifact@v3
        with:
          path: wheelhouse/*.whl


  upload_pypi:
    needs: [build_wheels]
    runs-on: ubuntu-latest
    # upload to PyPI on every tag starting with 'v'
    # alternatively, to publish when a GitHub Release is created, use the following rule:
    # if: github.event_name == 'release' && github.event.action == 'published'
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: artifact
          path: dist

      - uses: pypa/gh-action-pypi-publish@master
        with:
          user: __token__
          password: ${{ secrets.pypi_password }}